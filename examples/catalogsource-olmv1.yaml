# CatalogSource for OLMv1 File-Based Catalog (Executable)
#
# This CatalogSource resource deploys the executable Toolhive operator catalog
# to a Kubernetes/OpenShift cluster. The catalog image runs the operator-framework
# registry-server to serve operator metadata via gRPC.
#
# Usage:
#   kubectl apply -f examples/catalogsource-olmv1.yaml
#   # OR for OpenShift:
#   oc apply -f examples/catalogsource-olmv1.yaml
#
# Verify deployment:
#   kubectl get catalogsource -n openshift-marketplace toolhive-catalog
#   kubectl get pods -n openshift-marketplace | grep toolhive-catalog
#   kubectl logs -n openshift-marketplace <pod-name>
#
# Expected result:
#   - CatalogSource status shows READY
#   - Pod enters Running state within 10 seconds
#   - PackageManifest created for toolhive-operator
#   - Operator appears in OperatorHub UI

---
apiVersion: operators.coreos.com/v1alpha1
kind: CatalogSource
metadata:
  name: toolhive-catalog
  namespace: openshift-marketplace
spec:
  # Source type for executable catalog with registry-server
  sourceType: grpc

  # Catalog image with integrated registry-server
  # This image runs 'opm serve /configs --cache-dir=/tmp/cache'
  image: quay.io/roddiekieley/toolhive-operator-catalog:v0.4.2

  # Display name shown in OperatorHub UI
  displayName: Toolhive Operator Catalog

  # Publisher information
  publisher: Stacklok

  # Update strategy - poll registry for new versions
  updateStrategy:
    registryPoll:
      interval: 30m  # Check for updates every 30 minutes

  # Priority for catalog (higher priority = preferred)
  # Default: 0, range: -100 to 100
  priority: 0

  # Security context for catalog pod (OpenShift)
  # Uncomment if specific security context is needed
  # grpcPodConfig:
  #   securityContextConfig: restricted

  # Node selector for catalog pod placement
  # Uncomment to schedule on specific nodes
  # grpcPodConfig:
  #   nodeSelector:
  #     node-role.kubernetes.io/worker: ""

  # Resource requests/limits for catalog pod
  # Uncomment to set custom resource allocation
  # grpcPodConfig:
  #   resources:
  #     requests:
  #       cpu: 100m
  #       memory: 128Mi
  #     limits:
  #       cpu: 500m
  #       memory: 256Mi
