apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: toolhive-operator
    app.kubernetes.io/managed-by: kustomize
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: toolhive-operator
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
      app.kubernetes.io/name: toolhive-operator
  replicas: 0
  template:
    metadata:
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: toolhive-operator
    spec:
      serviceAccountName: controller-manager
      securityContext:
        runAsNonRoot: true
      terminationGracePeriodSeconds: 10
      containers:
        - name: manager
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: "ghcr.io/stacklok/toolhive/operator:v0.3.11"
          imagePullPolicy: IfNotPresent
          args:
          - --leader-elect
          ports:
            - containerPort: 8080
              name: metrics
              protocol: TCP
            - containerPort: 8081
              name: health
              protocol: TCP
          env:
          # Always use structured JSON logs in Kubernetes (not configurable)
          - name: UNSTRUCTURED_LOGS
            value: "false"
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: ENABLE_EXPERIMENTAL_FEATURES
            value: "false"
          - name: TOOLHIVE_RUNNER_IMAGE
            value: "ghcr.io/stacklok/toolhive/proxyrunner:v0.3.11"
          - name: TOOLHIVE_PROXY_HOST
            value: "0.0.0.0"
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
